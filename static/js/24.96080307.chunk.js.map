{"version":3,"file":"static/js/24.96080307.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","pages/Pages.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.form`\noutline: 2px solid #cbd6ee;\nwidth: 450px;\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nborder-radius: 2px;\n`;\n\nexport const Label = styled.label`\nfont-size: 16px;\n`;\n\nexport const Input = styled.input`\npadding: 12px;\nfont-size: 16px;\noutline: 2px solid #cbd6ee;\nborder: none;\nborder-radius: 2px;\n`;\n\nexport const Button = styled.button`\nappearance: none;\ncursor: pointer;\nborder: 0;\nborder-radius: 4px;\nbackground: #4676D7;\ncolor: #fff;\npadding: 15px;\nfont-size: 16px;\ntext-transform: capitalize;\n:hover,\n:focus {\n    background: #1d49aa;\n    outline: none;\n    box-shadow: 0 0 0 4px #cbd6ee;\n}\n`;\n\nexport const Message = styled.span`\nmargin-bottom: 10px;\nbackground-color: #cbd6ee;\ncolor: #1d49aa;\nborder-radius: 2px;\n`;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { addContact } from 'store/operations';\nimport { selectContacts } from 'store/selectors';\nimport { FormWrapper, Label, Input, Button, Message } from \"./ContactForm.styled\";\n\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst schema = yup.object().shape({\n    name: yup.string().trim().matches(nameRegExp, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\").required(),\n    number: yup.string().trim().matches(phoneRegExp, \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\").required(),\n  }).required();\n\n\nexport const ContactForm = () =>  {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = ({name, number}) => {\n    if (contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (contacts.some(contact => contact.number === number)) {\n      const findContact = contacts.find(contact => contact.number === number);\n      alert(`${number} is already in contacts as ${findContact.name}.`);\n      return;\n    }\n    dispatch(addContact({name, number})); \n    reset();\n  };\n    \n  return (\n    <FormWrapper onSubmit={handleSubmit(onSubmit)}>\n      <Label htmlFor=\"name\">Name</Label>\n        <Input\n            id=\"name\"\n            type=\"text\"\n            {...register('name')}\n        />\n          <Message>{errors.name?.message}</Message>\n      <Label htmlFor=\"number\">Number</Label>\n        <Input\n            id=\"number\"\n            type=\"tel\"\n            {...register('number')}\n        />          \n          <Message>{errors.number?.message}</Message>\n      <Button  type=\"submit\">Add contact</Button>\n    </FormWrapper>\n      ) \n\n}\n\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div``;\n\nexport const Input = styled.input`\ndisplay: block;\nwidth: 650px;\npadding: 12px;\nfont-size: 16px;\noutline: 2px solid #cbd6ee;\nborder: none;\nborder-radius: 2px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'store/filterSlice';\nimport { FilterWrapper,  Input } from './Filter.styled';\nimport { selectFilter } from 'store/selectors';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    return (\n        <FilterWrapper>\n          <Input\n          id=\"filter\"\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onInput={(event) => dispatch(getFilterValue(event.target.value))}\n          placeholder=\"Find contacts by name\"\n        />\n        </FilterWrapper>\n    )\n}\n\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\nwidth: 650px;\npadding: 12px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: baseline;\nfont-size: 16px;\noutline: 2px solid #cbd6ee;\nborder: none;\nborder-radius: 2px;\n`;\n\nexport const Title = styled.span`\nflex-basis: calc(100% / 3);\n`;\n\nexport const ContactButton = styled.button`\nappearance: none;\ncursor: pointer;\nborder: 0;\nborder-radius: 4px;\nbackground: #4676D7;\ncolor: #fff;\npadding: 8px;\nfont-size: 16px;\ntext-transform: capitalize;\n:hover,\n:focus {\n    background: #1d49aa;\n    outline: none;\n    box-shadow: 0 0 0 3px #cbd6ee;\n}\n`;","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'store/operations';\nimport {ContactItem, Title, ContactButton } from './Contact.styled';\n\nexport const Contact = ({id, name, number}) => {\n    const dispatch = useDispatch();\n    return (\n        <ContactItem>\n            <Title>{name}: </Title><Title>{number}</Title>\n            <ContactButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</ContactButton>\n        </ContactItem>\n    )\n}\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import styled from '@emotion/styled';\n\nexport const ContactListWrapper = styled.ul`\nmargin: 0;\npadding: 0;\ndisplay: flex;\nflex-direction: column;\ngap: 12px;\nlist-style-type: none;`;\n\n","import {  useSelector } from \"react-redux\";\nimport { Contact } from 'components/Contact';\nimport { ContactListWrapper } from './ContactList.styled';\nimport { selectVisibleContacts } from \"store/selectors\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n    return (\n        <ContactListWrapper >{\n            visibleContacts.map(contact => {\n                return (<Contact key={contact.id} \n               {...contact}/>)\n            })\n        }\n        </ContactListWrapper>\n  \n    )\n}\n\n\n\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"store/operations\";\nimport { selectError, selectIsLoading } from \"store/selectors\";\nimport { ContactForm } from \"components/ContactForm\";\nimport { Filter } from \"components/Filter\";\nimport { ContactList } from \"components/ContactList\";\nimport { Loader } from \"components/Loader\";\nimport { PageContainer, PageTitle } from \"./Pages.styled\";\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <PageContainer>\n             <ContactForm />\n            <PageTitle>Contacts</PageTitle>\n            <Filter/>\n            {isLoading  && <Loader/>}\n            {error && <h2>{error}</h2>}\n            <ContactList/>\n        </PageContainer>\n    )\n}\n\nexport default ContactsPage;\n","import styled from '@emotion/styled';\n\nexport const PageContainer = styled.div`\nheight: 20vh;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 10px;\n`;\n\nexport const PageTitle = styled.h1`\nfont-size: 40px;\n`;"],"names":["FormWrapper","styled","Label","Input","Button","Message","schema","yup","shape","name","trim","matches","required","number","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","some","contact","toLowerCase","alert","findContact","find","addContact","htmlFor","id","type","message","FilterWrapper","Filter","filter","selectFilter","value","onInput","event","getFilterValue","target","placeholder","ContactItem","Title","ContactButton","Contact","onClick","deleteContact","ContactListWrapper","ContactList","visibleContacts","selectVisibleContacts","map","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","PageContainer","PageTitle"],"sourceRoot":""}